openapi: 3.0.3
info:
  title: Backend API example
  description: Backend API example API declaration
  termsOfService: http://swagger.io/terms/
  contact:
    email: losikov@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: /api/v1

tags:
  - name: greeting
    description: Greeting APIs

paths:
  /hello:
    get:
      description: Returns 'Hello <name>/stranger!!!' to the caller
      tags:
        - greeting
      operationId: hello
      parameters:
        - name: name
          required: true
          in: query
          description: The name of a caller
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelloResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /goodbye:
    get:
      description: Returns 'Goodbye \<name\>!!!' to the authenticated caller
      tags:
        - greeting
      operationId: goodbye
      security:
        - bearerAuth: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelloResponse"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    HelloResponse:
      type: object
      additionalProperties: false
      required:
        - message
      properties:
        message:
          type: string
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
